    <BackendListener guiclass="BackendListenerGui" testclass="BackendListener" testname="Backend Listener 2" enabled="true">
      <elementProp name="arguments" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="duration" elementType="Argument">
            <stringProp name="Argument.name">duration</stringProp>
            <stringProp name="Argument.value">${__P(DURATION,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="simulation" elementType="Argument">
            <stringProp name="Argument.name">simulation</stringProp>
            <stringProp name="Argument.value">${__P(SIMULATION,test_simulation)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userCount" elementType="Argument">
            <stringProp name="Argument.name">userCount</stringProp>
            <stringProp name="Argument.value">${__P(USER_COUNT,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="projectName" elementType="Argument">
            <stringProp name="Argument.name">projectName</stringProp>
            <stringProp name="Argument.value">${__P(project.id,TIGER)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="envType" elementType="Argument">
            <stringProp name="Argument.name">envType</stringProp>
            <stringProp name="Argument.value">${__P(env.type,null)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="testType" elementType="Argument">
            <stringProp name="Argument.name">testType</stringProp>
            <stringProp name="Argument.value">${__P(test.type,null)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="loadGenerator" elementType="Argument">
            <stringProp name="Argument.name">loadGenerator</stringProp>
            <stringProp name="Argument.value">${__P(lg.id,${__machineName()})}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="buildID" elementType="Argument">
            <stringProp name="Argument.name">buildID</stringProp>
            <stringProp name="Argument.value">${__P(build.id,1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influxDBHost" elementType="Argument">
            <stringProp name="Argument.name">influxDBHost</stringProp>
            <stringProp name="Argument.value">${__P(influx.host,127.0.0.1)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influxDBPort" elementType="Argument">
            <stringProp name="Argument.name">influxDBPort</stringProp>
            <stringProp name="Argument.value">${__P(influx.port,8086)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influxDBUser" elementType="Argument">
            <stringProp name="Argument.name">influxDBUser</stringProp>
            <stringProp name="Argument.value">${__P(influx.username,db_username)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influxDBPassword" elementType="Argument">
            <stringProp name="Argument.name">influxDBPassword</stringProp>
            <stringProp name="Argument.value">${__P(influx.password,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="influxDBDatabase" elementType="Argument">
            <stringProp name="Argument.name">influxDBDatabase</stringProp>
            <stringProp name="Argument.value">${__P(influx.db,jmeter)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="retentionPolicy" elementType="Argument">
            <stringProp name="Argument.name">retentionPolicy</stringProp>
            <stringProp name="Argument.value">${__P(influx.retention.policy,autogen)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="classname">jmeter.backend.listener.InfluxBackendListenerClient</stringProp>
    </BackendListener>
    <hashTree/>
